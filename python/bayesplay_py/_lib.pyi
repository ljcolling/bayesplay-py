from typing import Any

def init_prior(prior: dict[str, Any]) -> PythonPrior: ...
def init_likelihood(prior: dict[str, Any]) -> PythonLikelihood: ...
def init_model(likelihood: dict[str, Any], prior: dict[str, Any]) -> PythonModel: ...
def init_posterior(
    likelihood: dict[str, Any], prior: dict[str, Any]
) -> PythonPosterior: ...

class PythonLikelihood:
    def function(self, x: float) -> float: ...
    def function_vec(self, x: list[float]) -> list[float]: ...

class PythonModel:
    def integral(self) -> float: ...
    @property
    def posterior(self) -> PythonPosterior: ...

class PythonPrior:
    def integrate(self, lb: float | None = None, ub: float | None = None) -> float: ...
    def function(self, x: float) -> float: ...
    def function_vec(self, x: list[float]) -> list[float]: ...

class PythonPosterior:
    def integrate(self, lb: float | None = None, ub: float | None = None) -> float: ...
    def function(self, x: float) -> float: ...
    def function_vec(self, x: list[float]) -> list[float]: ...
